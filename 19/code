/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    //时间复杂度：O(n) 空间复杂度：O(1)
    //快慢指针
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(head==nullptr || head->next==nullptr) return nullptr;
        ListNode* slow = head;
        ListNode* fast = head;
        ListNode* pre = nullptr;
        while(n--)
        {
            fast = fast->next;
        }
        while(fast!=nullptr)
        {
            fast = fast->next;
            pre = slow;
            slow = slow->next;
        }
        if(pre==nullptr) {
            head = slow->next;
        }
        else {
            pre->next = slow->next;
        }
        delete slow;
        slow = nullptr;
        return head;
    }
};
